<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reusable code snippets</title>
    <link>https://dawnmy.github.io/aha/</link>
    <description>Recent content on Reusable code snippets</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sun, 29 Oct 2017 21:59:26 +0200</lastBuildDate>
    
	<atom:link href="https://dawnmy.github.io/aha/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>贝叶斯统计与MCMC</title>
      <link>https://dawnmy.github.io/aha/post/%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%B8%8Emcmc/</link>
      <pubDate>Sun, 29 Oct 2017 21:59:26 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%B8%8Emcmc/</guid>
      <description>&amp;ldquo;When the facts change, I change my mind. What do you do, sir?&amp;rdquo; &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp; - by John Maynard Keynes
 贝叶斯思想的核心是将参数 $\theta$ 当成一个变量，我们不完全相信先验的信息而是基于先验信息并通过真实观测数据来不断更新参数值而得到参数的后验分布，这一点是与频率学派思想的最大区别。
贝叶斯定理 $P(Y|X)$为已知X发生后Y发生的概率，根据贝叶斯定理， $$P( P(Y|X) = \frac{P(X\bigcap{Y})}{P(X)}=\frac{P(X|Y)\times{P(Y)}}{P(X)} $$
其中，
 $P(X\bigcap{Y})$就是联合概率（joint probability），表示$X$，$Y$都发生的概率。 $P(X)$是$X$的先验概率（prior probability）或边缘概率（marginal probability）。 $P(Y)$是$Y$的先验概率或边缘概率。 $P(Y|X)$也叫后验概率（posterior probability）。  假设$Y$是离散的变量，$Y \in {y1,y2,&amp;hellip;,yi,&amp;hellip;,yn}$ ，上式可以改写为 $$ P(Y=yi|X) = \frac{P(X|Y=yi){P(Y=yi)}}{\sum{i=1}^n{P(X|Y=yi)P(Y=yi)}} $$ 如果用常用的贝叶斯变量名写法，$x$ 表示观测到的数据，$\theta$ 表示参数： $$ \pi(\theta{i}|x) = \frac{f(x|\theta{i}){\pi(\theta{i})}}{\sum{i=1}^n{f(x|\theta{i})\pi(\theta{i})}} $$
其中，$\pi$ 表示参数的概率分布函数，$\pi(\theta{i})$ 是参数的先验概率，$\pi(\theta{i}|x)$ 表示后验概率，$f(x|\theta{i})$表示我们观测的样本数据的分布也就是似然函数（likelihood function）。
上面公式中的参数$\theta$为离散的变量，当参数$\theta$为连续时，我们就不是用求和 $\sum$ 而是积分$\int$了。 $$ \pi(\theta)=\int\Theta{f(x|\theta)\pi(\theta)}d\theta $$ 于是： $$ \pi(\theta|x) = \frac{f(x|\theta){\pi(\theta)}}{\int{\Theta}{f(x|\theta)\pi(\theta)}d\theta} $$</description>
    </item>
    
    <item>
      <title>Prepare the sequence file for making customized Kraken DB</title>
      <link>https://dawnmy.github.io/aha/post/make_customized_kraken_db/</link>
      <pubDate>Sun, 06 Aug 2017 22:41:57 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/make_customized_kraken_db/</guid>
      <description>Kraken is a nice tool for taxonomy assignment for short sequencs, but the standard Kraken database is not suitable for specific purpose and the script in Kraken for customized DB construction is out of date. I usually first download the assembly_summary.tar.gz file from NCBI and extract the download link of certain genome from this file using grep or ripgrep. Then the GI or taxid will be added to the genome sequence header to be compatible to Kraken.</description>
    </item>
    
    <item>
      <title>Stacked barplot using ggplot2</title>
      <link>https://dawnmy.github.io/aha/post/stacked_barplot_using_ggplot/</link>
      <pubDate>Sun, 06 Aug 2017 22:26:48 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/stacked_barplot_using_ggplot/</guid>
      <description>library(ggplot2) library(reshape2) mt_rel &amp;lt;- read.delim(&amp;quot;mt_rel_gt2_forR.txt&amp;quot;, sep = &amp;quot;\t&amp;quot;, stringsAsFactors = F) colnames(mt_rel) &amp;lt;- gsub(&amp;quot;^X&amp;quot;, &amp;quot;&amp;quot;, colnames(mt_rel)) mt_rel_melt &amp;lt;- melt(mt_rel,id.vars = &amp;quot;Species&amp;quot;, variable.name = &amp;quot;samples&amp;quot;, value.name = &amp;quot;Abd&amp;quot;) #library(RColorBrewer) mt_rel_melt$samples &amp;lt;- factor(mt_rel_melt$samples, levels=rev(levels(mt_rel_melt$samples))) ggplot(mt_rel_melt, aes(x = samples, y = Abd, fill = Species)) + geom_bar(stat = &amp;quot;identity&amp;quot;, width = 0.7) + ylab(&amp;quot;% abundance&amp;quot;) + theme_bw() + theme(text = element_text(size=17, face = &amp;quot;bold&amp;quot;)) + scale_fill_ucscgb(alpha = 0.8) +coord_flip() ggsave(&amp;quot;./sample_kraken_composition_rel.pdf&amp;quot;, width = 10, height = 8)  </description>
    </item>
    
    <item>
      <title>Boxplot with breaks on y-axis using Python</title>
      <link>https://dawnmy.github.io/aha/post/boxplot_with_breaks/</link>
      <pubDate>Sun, 06 Aug 2017 21:59:26 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/boxplot_with_breaks/</guid>
      <description>Boxplot is extremely useful to illustrate the distribution of your data statistically. However, in some cases there are massive difference on distribution between the boxes. And we do not want to show the whole y-axis as this will make the data points unvisible especially when the figure size is limited. Here is a example showing how to depict such data in a decent way with breaks on y-aixs using matplotlib.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://dawnmy.github.io/aha/python/</link>
      <pubDate>Sun, 06 Aug 2017 00:27:24 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/python/</guid>
      <description>Python Python is a glue language which is used for various purposes including text processing, scientific computing and statistics.</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://dawnmy.github.io/aha/post/first/</link>
      <pubDate>Sat, 05 Aug 2017 20:49:29 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/first/</guid>
      <description>This is a test!
import pandas as pd import seaborn as sns # load csv file df = pd.read_csv(&amp;quot;file.csv&amp;quot;) # visualization sns.heatmap(df)  $$ x^2 + y^2 = z $$</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://dawnmy.github.io/aha/about/</link>
      <pubDate>Sat, 05 Aug 2017 20:47:43 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/about/</guid>
      <description>About the website This site reposits the code snippets which are reusable for data analysis and visualization written in Python and R. Most of them are bioinformatics relevant.
About me I am a PhD student in HZI working on microbime and bioinformatics. Massive NGS data processing, statistics, data visualization are my daily work which I found is fun for me. For my daily work, I use Python, R, Linux shell, Golang.</description>
    </item>
    
  </channel>
</rss>