<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reusable code snippets</title>
    <link>https://dawnmy.github.io/aha/</link>
    <description>Recent content on Reusable code snippets</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Sun, 06 Aug 2017 22:41:57 +0200</lastBuildDate>
    
	<atom:link href="https://dawnmy.github.io/aha/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Prepare the sequence file for making customized Kraken DB</title>
      <link>https://dawnmy.github.io/aha/post/make_customized_kraken_db/</link>
      <pubDate>Sun, 06 Aug 2017 22:41:57 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/make_customized_kraken_db/</guid>
      <description>```python
from Bio import SeqIO
rename sequences with GI number def rename_header(seq_file, gi_list_file, out_seq_file): fh = open(gi_list_file, &amp;ldquo;r&amp;rdquo;) gi_list = [gi.strip() for gi in fh]
fh.close() n = 0 out_seqs = [] for seq_record in SeqIO.parse(seq_file, &amp;quot;fasta&amp;quot;): if seq_record.seq: gi_header = &amp;quot;gi|{}|gb|{}&amp;quot;.format(gi_list[n], seq_record.description) # print(gi_header) seq_record.id = gi_header #&amp;quot;gi|&amp;quot; + gi_list[n] seq_record.description = &amp;quot;&amp;quot; out_seqs.append(seq_record) n += 1 # print(seq_record) # print(seq_record) SeqIO.write(out_seqs, out_seq_file, &amp;quot;fasta&amp;quot;)  retrive the representative def extract_seq(seq_file, name_list, out_seq_file): out_seqs = [] for seq_record in SeqIO.</description>
    </item>
    
    <item>
      <title>Stacked barplot using ggplot2</title>
      <link>https://dawnmy.github.io/aha/post/stacked_barplot_using_ggplot/</link>
      <pubDate>Sun, 06 Aug 2017 22:26:48 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/stacked_barplot_using_ggplot/</guid>
      <description>library(ggplot2) library(reshape2) mt_rel &amp;lt;- read.delim(&amp;quot;mt_rel_gt2_forR.txt&amp;quot;, sep = &amp;quot;\t&amp;quot;, stringsAsFactors = F) colnames(mt_rel) &amp;lt;- gsub(&amp;quot;^X&amp;quot;, &amp;quot;&amp;quot;, colnames(mt_rel)) mt_rel_melt &amp;lt;- melt(mt_rel,id.vars = &amp;quot;Species&amp;quot;, variable.name = &amp;quot;samples&amp;quot;, value.name = &amp;quot;Abd&amp;quot;) #library(RColorBrewer) mt_rel_melt$samples &amp;lt;- factor(mt_rel_melt$samples, levels=rev(levels(mt_rel_melt$samples))) ggplot(mt_rel_melt, aes(x = samples, y = Abd, fill = Species)) + geom_bar(stat = &amp;quot;identity&amp;quot;, width = 0.7) + ylab(&amp;quot;% abundance&amp;quot;) + theme_bw() + theme(text = element_text(size=17, face = &amp;quot;bold&amp;quot;)) + scale_fill_ucscgb(alpha = 0.8) +coord_flip() ggsave(&amp;quot;./sample_kraken_composition_rel.pdf&amp;quot;, width = 10, height = 8)  </description>
    </item>
    
    <item>
      <title>Boxplot with breaks on y-axis using Python</title>
      <link>https://dawnmy.github.io/aha/post/boxplot_with_breaks/</link>
      <pubDate>Sun, 06 Aug 2017 21:59:26 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/boxplot_with_breaks/</guid>
      <description>Boxplot is extremely useful to illustrate the distribution of your data statistically. However, in some cases there are massive difference on distribution between the boxes. And we do not want to show the whole y-axis as this will make the data points unvisible especially when the figure size is limited. Here is a example showing how to depict such data in a decent way with breaks on y-aixs using matplotlib.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://dawnmy.github.io/aha/python/</link>
      <pubDate>Sun, 06 Aug 2017 00:27:24 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/python/</guid>
      <description>Python Python is a glue language which is used for various purposes including text processing, scientific computing and statistics.</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://dawnmy.github.io/aha/post/first/</link>
      <pubDate>Sat, 05 Aug 2017 20:49:29 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/post/first/</guid>
      <description>This is a test!
import pandas as pd import seaborn as sns # load csv file df = pd.read_csv(&amp;quot;file.csv&amp;quot;) # visualization sns.heatmap(df)  $$ x^2 + y^2 = z $$</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://dawnmy.github.io/aha/about/</link>
      <pubDate>Sat, 05 Aug 2017 20:47:43 +0200</pubDate>
      
      <guid>https://dawnmy.github.io/aha/about/</guid>
      <description>About the website This site reposits the code snippets which are reusable for data analysis and visualization written in Python and R. Most of them are bioinformatics relevant.
About me I am a PhD student in HZI working on microbime and bioinformatics. Massive NGS data processing, statistics, data visualization are my daily work which I found is fun for me. For my daily work, I use Python, R, Linux shell, Golang.</description>
    </item>
    
  </channel>
</rss>